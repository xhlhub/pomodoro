name: Build Electron App

on:
  push:
    tags:
      - "v*.*.*" # 每次打 tag 会触发构建（如 v1.0.0）

permissions:
  contents: read
  packages: write

jobs:
  build-windows:
    runs-on: windows-latest

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }} # 👈 这一段是关键

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Install Python (for better-sqlite3)
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Rebuild native dependencies
        run: npm rebuild better-sqlite3 --build-from-source

      - name: Compile TypeScript
        run: npm run compile-main

      - name: Build React app
        run: npm run react-build

      - name: Confirm main.js exists
        run: dir dist\main.js

      - name: Confirm build files exist
        run: |
          dir dist
          dir build
          echo "Node version:"
          node --version
          echo "NPM version:"
          npm --version
          echo "Current directory:"
          pwd

      - name: Build and package (Windows)
        run: npx electron-builder --win

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: output/*.exe

  build-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Rebuild native dependencies
        run: npm rebuild better-sqlite3 --build-from-source

      - name: Compile TypeScript
        run: npm run compile-main

      - name: Build React app
        run: npm run react-build

      - name: Confirm main.js exists
        run: ls -la dist/main.js

      - name: Confirm build files exist
        run: |
          ls -la dist
          ls -la build
          echo "Node version:"
          node --version
          echo "NPM version:"
          npm --version
          echo "Current directory:"
          pwd

      - name: Build and package (macOS)
        run: npx electron-builder --mac

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: output/*.dmg
